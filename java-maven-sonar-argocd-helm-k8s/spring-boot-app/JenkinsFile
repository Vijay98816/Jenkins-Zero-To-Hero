pipeline {
  agent {
    docker {
      image 'vijay934/maven-docker-agent:v2.0'
      args '--entrypoint="" -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
    SONAR_URL = "http://54.160.187.59:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "Vijay98816"
    DOCKER_IMAGE = "vijay934/ultimate-cicd:${BUILD_NUMBER}"
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'echo ‚úÖ Code checked out successfully!'
      }
    }
    stage('Fix Permissions') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          # Force remove the target directory if it exists
          rm -rf target || true
          # Create target directory with proper permissions
          mkdir -p target
          chmod -R 777 target
        '''
      }
    }
    stage('Build and Test') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }
    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t $DOCKER_IMAGE .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_IMAGE
          '''
        }
      }
    }
    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s') {
            sh """
              git config user.email "vijaykumar16898@gmail.com"
              git config user.name "Vijay Kumar"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
              git add spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo 'No changes to commit'
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            """
          }
        }
      }
    }
  }
  post {
    always {
      echo 'üßπ Cleaning up target directory to avoid future permission issues...'
      sh 'chmod -R 777 java-maven-sonar-argocd-helm-k8s/spring-boot-app/target || true'
      sh 'rm -rf java-maven-sonar-argocd-helm-k8s/spring-boot-app/target || true'
    }
    success {
      echo 'üéâ Pipeline completed successfully!'
    }
    failure {
      echo '‚ùå Pipeline failed. Check the logs above for details.'
    }
  }
}
